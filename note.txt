五种方法创建服务:
factory()
service()
constant()
value()
provider()

Service vs Factory
function factory(name,factoryFn){
return provider(name,{$get:factoryFn});
}
function service(name,constructor){
return factory(name,['$injector',function($injector){
 return $injector.instantiate(constructor);
}
});
}
$injector.instantiate:

var app=angular.module('app',[])
app.service('helloWorldService',function(){
this.hello = function(){return "hello";
};
});

app.factory('helloWorldFactory',function(){
   return {
   hello:function(){
   return "Hello World";}
   }
}
});
所有的providers都是单例

添加路由
angular.module('myApp',[]).
config(['$routeProvider',function($routeProvider){
$routeProvider.when('/',
{
controller:'HomeController',
template:'<h2>We are home</h2>'
})
.otherwise({redirectTo:'/'});
}]);


angular.module('myApp')
.factory('myService',function(){
     return {
     'username':'auser'
     };
});

依赖注入
var app = angular.module('app',[]);
app.controller('MainCtrl',function($scope,$timeout){
$timeout(function(){
console.log($scope);
},1000);
});
app.controller("MainCtrl1",function(e,t){t(function(){console.log(e)},1e3)})

指令(directive):
angular.module('myApp',[])
.directive('myDirective',function(){
return {
   restrict:'E',
   template:'<a href="http://google.com">
   Click me to go to Google</a>'
   }
   });
<my-directive></my-directive>
<div my-directive></div>
<div class="my-directive"></div>


部分参考http://blog.jobbole.com/78946/
https://segmentfault.com/a/1190000004385117 瀑布流设计
http://www.angularjs.cn/A0a6  watch
http://www.haomou.net/2014/08/11/2014_ionic_api/
http://blog.csdn.net/i348018533/article/details/47258449#0-tsina-1-71108-397232819ff9a47a7b7e80a40613cfe1